from .models import SystemMessageText
from collections import namedtuple
from sender.enum import MessageTypeEnum

msg = namedtuple('msg', ['text', 'type', 'caption', 'buttons', 'columns'])


class MessageEnum:
    WELCOME_MSG = 1
    START_MENU = 2
    ASK_AGE = 3
    VALIDATE_ERROR = 4
    IS_CORRECT_AGE = 5
    LOCATION = 6
    IS_CORRECT_LOCATION = 7
    MAN_OR_WOMAN = 8
    DIAGNOSIS = 9
    IS_CORRECT_DIAGNOSIS = 10
    YOGA = 11
    YOGA_FIRST = 12
    YOGA_SECOND = 13
    YOGA_THIRD = 14
    YOGA_FOUR = 15
    YOGA_FIVE = 16
    YOGA_SIX = 17
    FOOD_FIRST = 18
    FOOD_SECOND = 19
    FOOD_THIRD = 20
    FOOD_FOUR = 21
    FOOD_FIVE = 22
    FOOD_SIX = 23
    FOOD_SEVEN = 24
    FOOD_EIGHT = 25
    FOOD_NINE = 26
    FOOD_TEN = 27
    PSY = 28
    MENU = 29
    DIAG_INPUT = 30
    DETAIL = 31
    DETAIL_INPUT = 32
    THX = 33
    PROFILE = 34
    PROFILE_PHOTO = 35
    QUESTION = 36
    ARTICLE_TITLE = 37
    ABOUT_ARTICLE = 38
    ARTICLE_EMPTY = 39
    CLICK_FEEDBACK = 40

    values = {
        WELCOME_MSG: msg(
            text="–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ *uCan*\n"
                 "–ó–∞—Ö–æ–¥–∏ –≤ –∞–¥–º–∏–Ω–∫—É:\nhttps://bot\.you\-can\.live/",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        START_MENU: msg(
            text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —è –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ *uCan*,\r\n"
                 "–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É,\r\n"
                 "–∫–∞–∫ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É üëá",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[{'label': '–Ω–∞—á–∞—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ', 'callback': 'start'}],
            columns=1
        ),
        LOCATION: msg(
            text="–ù–∞–ø–∏—à–∏ –∏–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        ASK_AGE: msg(
            text="–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        MAN_OR_WOMAN: msg(
            text="–£–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–ú', 'callback': 'man'},
                {'label': '–ñ', 'callback': 'woman'},
            ],
            columns=2
        ),
        DIAGNOSIS: msg(
            text="–£–∫–∞–∂–∏ —á—Ç–æ —Ç–µ–±—è –±–µ—Å–æ–ø–æ–∫–∏—Ç",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¢—Ä—É—Å—ã –Ω–∞–≤–∞–ª—å–Ω–æ–≥–æ', 'callback': 'm_1'},
                {'label': '–ú–∞–∫–∞—Ä–æ–Ω–æ–≤–∏—Ä—É—Å', 'callback': 'm_2'},
                {'label': '–ë–∞–≥–∏ –∫–∏–±–µ—Ä–ø–∞–Ω–∫–∞ –Ω–∞ PS4', 'callback': 'm_3'},
            ],
            columns=2
        ),
        DIAG_INPUT: msg(
            text="–ù–∞–ø–∏—à–∏ —á—Ç–æ —Å —Ç–æ–±–æ–π –Ω–µ —Ç–∞–∫",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        VALIDATE_ERROR: msg(
            text="–í–≤–µ–¥–∏ –µ—â—ë —Ä–∞–∑ \(—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã\)",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        IS_CORRECT_AGE: msg(
            text="–¢–≤–æ–π –≤–æ–∑—Ä–∞—Ç *{}*, –≤–µ—Ä–Ω–æ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_age'},
                {'label': '–≤–≤–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ', 'callback': 'again_age'},
            ],
            columns=2
        ),
        IS_CORRECT_LOCATION: msg(
            text="–¢–≤–æ–π –≥–æ—Ä–æ–¥ *{}*, –≤–µ—Ä–Ω–æ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_loc'},
                {'label': '–≤–≤–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ', 'callback': 'again_loc'},
            ],
            columns=2
        ),
        IS_CORRECT_DIAGNOSIS: msg(
            text="–¢—ã —É–∫–∞–∑–∞–ª *{}*, –≤–µ—Ä–Ω–æ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_diag'},
                {'label': '–≤–≤–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ', 'callback': 'again_diag'},
            ],
            columns=2
        ),
        YOGA: msg(
            text="*–ì—Ä—É–ø–ø–∞ 1*:\r\n"
                 "–û—Ç–≤–µ—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤:",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        YOGA_FIRST: msg(
            text="–£ —Ç–µ–±—è —É–∂–µ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è \.\.\. ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_yoga_first'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_yoga_first'},
            ],
            columns=2
        ),
        YOGA_SECOND: msg(
            text="–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ \.\.\. ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_yoga_second'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_yoga_second'},
            ],
            columns=2
        ),
        YOGA_THIRD: msg(
            text="–¢—ã –ø—Ä–æ—Ö–æ–¥–∏—à—å \.\.\. ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_yoga_third'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_yoga_third'},
            ],
            columns=2
        ),
        YOGA_FOUR: msg(
            text="–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ \.\.\. ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_yoga_four'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_yoga_four'},
            ],
            columns=2
        ),
        YOGA_FIVE: msg(
            text="–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ,"
                 "–±–æ–¥—Ä–æ –∏ –µ—Å—Ç—å —Å–∏–ª—ã –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∞–Ω–∏–º–∞—Ç—å—Å—è?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_yoga_five'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_yoga_five'},
            ],
            columns=2
        ),
        YOGA_SIX: msg(
            text="–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_yoga_five'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_yoga_five'},
            ],
            columns=2
        ),
        FOOD_FIRST: msg(
            text="–ö–∞–∫–æ–π —É —Ç–µ–±—è —Ä–æ—Å—Ç?\r\n"
                 "\(–ø–∏—à–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –≤ —Å–º\)",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        FOOD_SECOND: msg(
            text="–¢–≤–æ–π —Ä–æ—Å—Ç *{}—Å–º*, –≤–µ—Ä–Ω–æ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_age'},
                {'label': '–≤–≤–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ', 'callback': 'again_age'},
            ],
            columns=2
        ),
        FOOD_THIRD: msg(
            text="–£–∫–∞–∂–∏ —Å–≤–æ–π –≤–µ—Å",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        FOOD_FOUR: msg(
            text="–¢–≤–æ–π –≤–µ—Å *{}–∫–≥*, –≤–µ—Ä–Ω–æ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_age'},
                {'label': '–≤–≤–µ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ', 'callback': 'again_age'},
            ],
            columns=2
        ),
        FOOD_FIVE: msg(
            text="–ù–∞–±–ª—é–¥–∞–ª–∞—Å—å –ª–∏ —É —Ç–µ–±—è –ø–æ—Ç–µ—Ä—è ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_food_five'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_food_five'},
            ],
            columns=2
        ),
        FOOD_SIX: msg(
            text="–ù–∞–º–µ—Ä–µ–Ω–æ –ª–∏ –±—ã–ª–æ —Å–æ–≤–µ—Ä—à–µ–Ω–æ ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_food_six'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_food_six'},
            ],
            columns=2
        ),
        FOOD_SEVEN: msg(
            text="–ë—ã–ª–æ –ª–∏ —Å–Ω–∏–∂–µ–Ω–æ ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_food_seven'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_food_seven'},
            ],
            columns=2
        ),
        FOOD_EIGHT: msg(
            text="–ë—ã–ª–æ –ª–∏ —Å–Ω–∏–∂–µ–Ω–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ ? ",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_food_seven'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_food_seven'},
            ],
            columns=2
        ),
        FOOD_NINE: msg(
            text="–û—Ç–º–µ—á–∞–µ—Ç–µ –ª–∏ –í—ã –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–Ω–æ–µ ?",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–¥–∞', 'callback': 'yes_food_seven'},
                {'label': '–Ω–µ—Ç', 'callback': 'no_food_seven'},
            ],
            columns=2
        ),
        PSY: msg(
            text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–µ—Ç–µ —á–∏—Å–ª–æ \(–æ—Ç 0 –¥–æ 10\), –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–∏–ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–º –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–æ,"
                 "–∫–∞–∫ —Å–∏–ª—å–Ω–æ –≤—ã \.",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '0', 'callback': '0'},
                {'label': '1', 'callback': '1'},
                {'label': '2', 'callback': '2'},
                {'label': '3', 'callback': '3'},
                {'label': '4', 'callback': '4'},
                {'label': '5', 'callback': '5'},
                {'label': '6', 'callback': '6'},
                {'label': '7', 'callback': '7'},
                {'label': '8', 'callback': '8'},
                {'label': '9', 'callback': '9'},
                {'label': '10', 'callback': '10'},
            ],
            columns=4
        ),
        MENU: msg(
            text="–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ, —Å–∫–æ—Ä–æ –º—ã —Ç–µ–±—è –Ω–∞—á–Ω–µ–º –∑–∞–≤–∞–ª–∏–≤–∞—Ç—å —Å–ø–∞–º–æ–º\.\.\."
                 "–í—Å–µ –Ω–∞—à–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –±—É–¥—É—Ç –ø–æ–º–µ—á–∞—Ç—å—Å—è —Ö–µ—à—Ç–µ–≥–∞–º–∏, –∞ "
                 "–¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –º—ã —Å–¥–µ–ª–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∂–µ—Ç —Ç–µ–±–µ –≤—Å–µ —Ö–µ—à—Ç–µ–≥–∏ –≤—Å–µ—Ö —Ä–∞—Å—Å—ã–ª–æ–∫\."
                 "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —á—Ç–æ —Ç–æ —Å–ø—Ä–æ—Å–∏—Ç—å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', 'callback': 'alarm'},
                {'label': '# —Ö–µ—à—Ç–µ–≥–∏', 'callback': 'hash'},
                {'label': '—Å—Ç–∞—Ç—å–∏', 'callback': 'article'},
            ],
            columns=2
        ),
        DETAIL: msg(
            text="–¢–µ–∫—Å—Ç –∑–∞–≥–ª—É—à–∫–∞, –¥–ª—è —Å–±–æ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=[
                {'label': '–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', 'callback': 'want_to_say'},
            ],
            columns=1
        ),
        DETAIL_INPUT: msg(
            text="–ù–∞–º –≤–∞–∂–Ω–æ —Ç–≤–æ—ë –º–Ω–µ–Ω–∏–µ, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –æ—Ç–≤–µ—Ç –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        THX: msg(
            text="–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å\.",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        PROFILE: msg(
            text='__–ù–û–í–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨__\r\n'
                 '*–Ω–∏–∫*: {}\r\n'
                 '*–∏–º—è*: {}\r\n' 
                 '*—Ñ–∞–º–∏–ª–∏—è*: {}\r\n '
                 '\r\n'
                 '–ø–æ–ª: {}\r\n'
                 '–≥–æ—Ä–æ–¥: {}\r\n'
                 '–≤–æ–∑—Ä–∞—Å—Ç: {}\r\n'
                 '–≤–µ—Ä–¥–∏–∫—Ç: {}\r\n'
                 '–ø–æ—Å–ª–µ —á–µ–≥–æ —Ç–æ: {}\r\n'
                 '—Ä–æ—Å—Ç: {}\r\n'
                 '–≤–µ—Å: {}\r\n'
                 '\r\n'
                 '{}',
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        QUESTION: msg(
            text="–ó–∞–¥–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å \(–≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ\)",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        ARTICLE_TITLE: msg(
            text="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ç–µ–±–µ —Ä–∞–∑–¥–µ–ª:",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        ABOUT_ARTICLE: msg(
            text="–¢—É—Ç —Å–æ–±—Ä–∞–Ω—ã —Å—Ç–∞—Ç—å–∏ —Ä–∞–∑–¥–µ–ª–∞",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        ARTICLE_EMPTY:  msg(
            text="–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞, –∞ –ø–æ–∫–∞ —Ç—É—Ç –ø—É—Å—Ç–æ.",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
        CLICK_FEEDBACK: msg(
            text="–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—Å –æ —á—ë–º —Ç–æ —Å–ø—Ä–æ—Å–∏—Ç—å, —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é '–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å'. –ß—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –Ω–∞–∂–∞—Ç—å '/start'",
            type=MessageTypeEnum.TEXT,
            caption=None,
            buttons=None,
            columns=0
        ),
    }


def get_question(msg_):
    new_msg = get_msg(MessageEnum.DETAIL)
    setattr(msg_, 'buttons', new_msg.buttons)
    setattr(msg_, 'columns', new_msg.columns)
    return msg_


def update_msg_text(key, *args):
    old = get_msg(key)
    text = old.text.format(*args)
    return msg(text, old.type, old.caption, old.buttons, old.columns)


def update_msg_caption(key, *args):
    old = get_msg(key)
    caption = old.caption.format(*args)
    return msg(old.text, old.type, caption, old.buttons, old.columns)


def get_text(id_):
    try:
        text = SystemMessageText.objects.get(id=id_).text
    except SystemMessageText.DoesNotExist:
        text = MessageEnum.values.get(id_).text
    return text


def get_msg(id_):
    try:
        msg_ = SystemMessageText.objects.get(id=id_)
    except SystemMessageText.DoesNotExist:
        msg_ = MessageEnum.values.get(id_)
    return msg_
